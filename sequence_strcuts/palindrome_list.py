
# 判断一个链表是否为回文结构
# 【题目】 给定一个链表的头节点head，请判断该链表是否为回文结构。 例如: 1->2->1，返回true。 1->2->2->1，返回true。 15->6->15，返回true。 1->2->3，返回false。
# 进阶: 如果链表长度为N，时间复杂度达到O(N)，额外空间复杂度达到 O(1)。

# 解题思路：
# 解法1：最直接的方法就是 先遍历链表，将链表元素压栈。在遍历链表和栈，一一比较。
# 解法一的改进版就是 只压后一半的元素压栈（这样做需要用一次走一步，一次走两步的快慢指针来找到链表的中点）节省了额外空间，时间复杂度的常数项也减少了。
# 但链表问题，面试时拿来考你，往往就是要你不准用额外空间为 O(N)的解法，让你在额外空间上找到最优解。
# 这道题的 “为难版” 就是要你额外空间复杂度到 O(1)












def main():
    pass

if __name__ == '__main__':
    main()
